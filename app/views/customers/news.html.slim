- set_meta_tags noindex: true
h2.heading
    | 新着インポート（赤）｜再掲載（青）｜残着信+不在1回以内（緑）
table[width="90%" cellpadding="0" cellspacing="0"]
      thead
        tr
          th
            | 各種件数
          th
             = 1.day.since.strftime("%Y/%m/%d")
          th
             = Date.current.strftime("%Y/%m/%d")
          th
             = 1.day.ago.strftime("%Y/%m/%d")
          th
            = 2.day.ago.strftime("%Y/%m/%d")
          th
            = 3.day.ago.strftime("%Y/%m/%d")
          th
            | 着信留守/担当者不在1回以内
          th
            | 1ヶ月以内未コール件数
        tr
          th
            | 光誠会（介護）
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours)).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%光誠会（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%光誠会（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%光誠会（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%光誠会（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .ltec_calls_count
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).ltec_calls_count(1).joins(:calls).where("calls.statu": "着信留守").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count + Customer.where("industry LIKE ?", "%フコックス（工場）%").ltec_calls_count(1).joins(:calls).where("calls.statu": "担当者不在").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count
          td
             .no_calls_count
              = Customer.where("industry LIKE ?", "%光誠会（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.month.ago.beginning_of_month..Time.current.end_of_month)).where.not(id: Call.select(:customer_id)).count
        tr
          th
            | モンキークルー（介護）
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours)).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .ltec_calls_count
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).ltec_calls_count(1).joins(:calls).where("calls.statu": "着信留守").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count + Customer.where("industry LIKE ?", "%フコックス（工場）%").ltec_calls_count(1).joins(:calls).where("calls.statu": "担当者不在").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count
          td
             .no_calls_count
              = Customer.where("industry LIKE ?", "%モンキークルー（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.month.ago.beginning_of_month..Time.current.end_of_month)).where.not(id: Call.select(:customer_id)).count
        tr
          th
            | SND（介護）
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours)).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%SND（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%SND（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%SND（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%SND（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .ltec_calls_count
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).ltec_calls_count(1).joins(:calls).where("calls.statu": "着信留守").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count + Customer.where("industry LIKE ?", "%フコックス（工場）%").ltec_calls_count(1).joins(:calls).where("calls.statu": "担当者不在").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count
          td
             .no_calls_count
              = Customer.where("industry LIKE ?", "%SND（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.month.ago.beginning_of_month..Time.current.end_of_month)).where.not(id: Call.select(:customer_id)).count
        tr
          th
            | SND（宿泊）
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours)).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%SND（宿泊）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%SND（宿泊）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%SND（宿泊）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%SND（宿泊）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .ltec_calls_count
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).ltec_calls_count(1).joins(:calls).where("calls.statu": "着信留守").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count + Customer.where("industry LIKE ?", "%フコックス（工場）%").ltec_calls_count(1).joins(:calls).where("calls.statu": "担当者不在").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count
          td
             .no_calls_count
              = Customer.where("industry LIKE ?", "%SND（宿泊）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.month.ago.beginning_of_month..Time.current.end_of_month)).where.not(id: Call.select(:customer_id)).count
        tr
          th
            | LINK（介護）
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours)).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%LINK（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%LINK（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%LINK（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%LINK（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .ltec_calls_count
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).ltec_calls_count(1).joins(:calls).where("calls.statu": "着信留守").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count + Customer.where("industry LIKE ?", "%フコックス（工場）%").ltec_calls_count(1).joins(:calls).where("calls.statu": "担当者不在").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count
          td
             .no_calls_count
              = Customer.where("industry LIKE ?", "%LINK（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.month.ago.beginning_of_month..Time.current.end_of_month)).where.not(id: Call.select(:customer_id)).count
        tr
          th
            | LINK（飲食）
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours)).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%LINK（飲食）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%LINK（飲食）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%LINK（飲食）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%LINK（飲食）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .ltec_calls_count
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).ltec_calls_count(1).joins(:calls).where("calls.statu": "着信留守").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count + Customer.where("industry LIKE ?", "%フコックス（工場）%").ltec_calls_count(1).joins(:calls).where("calls.statu": "担当者不在").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count
          td
             .no_calls_count
              = Customer.where("industry LIKE ?", "%LINK（飲食）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.month.ago.beginning_of_month..Time.current.end_of_month)).where.not(id: Call.select(:customer_id)).count

        tr
          th
            | J Work（介護）
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours)).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（介護）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .ltec_calls_count
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).ltec_calls_count(1).joins(:calls).where("calls.statu": "着信留守").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count + Customer.where("industry LIKE ?", "%フコックス（工場）%").ltec_calls_count(1).joins(:calls).where("calls.statu": "担当者不在").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count
          td
             .no_calls_count
              = Customer.where("industry LIKE ?", "%J Work（介護）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.month.ago.beginning_of_month..Time.current.end_of_month)).where.not(id: Call.select(:customer_id)).count
        tr
          th
            | J Work（工場）
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours)).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（工場）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（工場）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（工場）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（工場）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .ltec_calls_count
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).ltec_calls_count(1).joins(:calls).where("calls.statu": "着信留守").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count + Customer.where("industry LIKE ?", "%フコックス（工場）%").ltec_calls_count(1).joins(:calls).where("calls.statu": "担当者不在").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count
          td
             .no_calls_count
              = Customer.where("industry LIKE ?", "%J Work（工場）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.month.ago.beginning_of_month..Time.current.end_of_month)).where.not(id: Call.select(:customer_id)).count
        tr
          th
            | J Work（食品）
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours)).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.since.beginning_of_day - 8.hours)..(1.day.since.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（食品）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (Time.zone.now.beginning_of_day - 8.hours)..(Time.zone.now.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（食品）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (1.day.ago.beginning_of_day - 8.hours)..(1.day.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（食品）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (2.days.ago.beginning_of_day - 8.hours)..(2.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .between_created_at
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours)).or(Customer.where("industry LIKE ?", "%J Work（食品）%").where.not(status:"draft").where.not(status:"draft").where(updated_at: (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours))).count
             .between_nexted_at
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).joins(:calls).where("calls.created_at": (3.days.ago.beginning_of_day - 8.hours)..(3.days.ago.beginning_of_day + 16.hours), "calls.statu": "再掲載").count
          td
             .ltec_calls_count
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).ltec_calls_count(1).joins(:calls).where("calls.statu": "着信留守").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count + Customer.where("industry LIKE ?", "%フコックス（工場）%").ltec_calls_count(1).joins(:calls).where("calls.statu": "担当者不在").where("calls.created_at > ?", 1.month.ago.beginning_of_month).where("calls.created_at < ?", Time.current.end_of_month).count
          td
             .no_calls_count
              = Customer.where("industry LIKE ?", "%J Work（食品）%").where(status: nil).where.not(tel: [nil, "", " "]).where(updated_at: (1.month.ago.beginning_of_month..Time.current.end_of_month)).where.not(id: Call.select(:customer_id)).count
